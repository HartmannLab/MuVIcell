[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "muvicell"
version = "0.1.0"
description = "From cell-type stratified features to multicellular coordinated programs"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "HartmannLab"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "scikit-learn>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
]
notebooks = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "plotly>=5.0.0",
]
all = [
    "muvicell[dev,notebooks]",
]

[project.scripts]
muvicell = "muvicell.cli:main"

[project.urls]
Homepage = "https://github.com/HartmannLab/MuVIcell"
Repository = "https://github.com/HartmannLab/MuVIcell"
Issues = "https://github.com/HartmannLab/MuVIcell/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/muvicell"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=muvicell --cov-report=term-missing --cov-report=html"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["src/muvicell"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    'if __name__ == "__main__":',
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]